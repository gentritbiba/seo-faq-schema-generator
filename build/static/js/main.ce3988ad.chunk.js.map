{"version":3,"sources":["logo.svg","components/Question.js","components/GeneratedSchema.js","components/Html.js","pages/home.js","components/Reviews.js","pages/reviewSchemaGenerator.js","htmlCompTemplate/Template1.js","pages/defaultSettings.js","components/SettingsPannel.js","components/GeneratedHTMLCode.js","pages/htmlGenerator.js","components/Navbar.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","input","width","marginRight","question","margin","display","removeBtn","maxWidth","minWidth","borderRadius","border","fontWeight","color","fontSize","background","button","marginTop","Questions","props","questions","setQuestions","classes","map","el","index","className","TextField","id","label","value","onChange","e","target","updateJsonBody","answer","Button","variant","onClick","newQ","filter","deleteQuestion","push","JSONPrettyMon","require","JSONPretty","generatedCodeWrapper","GeneratedSchema","in","nerHTML","title","innerHTML","generatedCode","data","textField","Html","useState","text","setText","multiline","rows","replace","console","log","questionsRes","matchAll","answersRes","newQuestions","forEach","indx","generateHTML","paper","padding","spacing","palette","secondary","titleInput","jsonBodyStructure","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","Home","setValue","setTitle","jsonBody","setJsonBody","q","mainEntity","component","Grid","container","item","xs","md","Paper","AppBar","position","Tabs","event","newValue","aria-label","Tab","v","marginBottom","marginLeft","Reviews","reviews","setReviews","reviewRating","ratingValue","datePublished","author","name","reviewBody","wideInput","brand","model","description","priceRange","review","ReviewSchemaGenerator","make","setMake","setModel","setName","setDescription","price","setPrice","updateJsonStructure","key","val","func","length","template","settings","javascript","oneActive","CSS","qFontSize","aFontSize","src","style","textColor","borderColor","backgroundColor","$","parent","addClass","removeClass","find","slideToggle","toggleClass","defaultSettings","fieldRow","justifyContent","SettingsPannel","setSettings","defaultValues","timeoutFunction","window","currentRunningFunc","clearTimeout","setTimeout","handleOnChange","a","FormControl","FormControlLabel","control","Switch","defaultChecked","checked","labelPlacement","hex","GeneratedHTMLCode","language","dark","codeString","body","genButton","tabValue","setTabValue","HTMLCode","setHTMLCode","setHtmlBody","updateHtmlBody","JSON","stringify","document","getElementById","onCopy","alert","pages","link","Nabar","React","anchorElNav","setAnchorElNav","handleCloseNavMenu","Container","Toolbar","disableGutters","sx","noWrap","mr","flexGrow","IconButton","size","aria-controls","aria-haspopup","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","page","MenuItem","Link","to","textAlign","App","ThemeProvider","Navbar","exact","path","ReviewSchemaGeneratior","HtmlGenerator","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ce3988ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport { TextField, Button } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    input : {\n        width: \"45%\",\n        marginRight:\"5%\"\n    },\n    question:{\n        margin: \"20px 0\",\n        display: \"flex\"\n    },\n    removeBtn:{\n        maxWidth:\"48px !important\",\n        minWidth:\"48px !important\",\n        borderRadius:\"50%\",\n        border:\"none\",\n        fontWeight:\"bolder\",\n        color:\"white\",\n        fontSize:20,\n        background:\"#dc3545\"\n    },\n    button:{\n        marginTop:30\n    }\n}));\n\nconst generateKey = (pre) => {\n    return `${ pre }_${ new Date().getTime() }`;\n}\n\nexport function  Questions(props){\n    const {questions, setQuestions} = props\n    const classes = useStyles();\n    const handleQuestionChange = () => {}\n\n    const addQuestion = () => {\n        questions.push({ question: \"\", answer:\"\" });\n        setQuestions([...questions]);\n        props.updateJsonBody()\n      };\n    const deleteQuestion = (id) => {\n        const newQ =  questions.filter((el, index) => {\n            return index !== id;\n        })\n        setQuestions(newQ);\n        props.updateJsonBody(newQ)\n    }\n    return(\n        <div>\n            {questions.map((el, index) => {\n                return(\n                    <div key={index} className={classes.question}>\n                        <TextField\n                        key={\"q_\" + index}\n                        id={\"q_\" + index}\n                        label=\"Question\"\n                        value={el.question}\n                        className={classes.input}\n                        onChange={(e)=>{\n                            el.question = e.target.value\n                            setQuestions([...questions])\n                            props.updateJsonBody(questions)\n                        }}\n                        />\n                        <TextField\n                        key={\"a_\" + index}\n                        id={\"a_\" + index}\n                        label=\"Answer\"\n                        value={el.answer}\n                        className={classes.input}\n                        onChange={(e)=>{\n                            el.answer = e.target.value\n                            setQuestions([...questions])\n                            props.updateJsonBody(questions)\n                        }}\n                        />\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>{deleteQuestion(index)}} className={classes.removeBtn}>-</Button>\n                    </div>\n                );\n            })}\n            <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={addQuestion}>Add Question</Button>\n        </div>\n    )\n}","import { makeStyles } from '@material-ui/core';\nimport Highlight from 'react-highlight'\nvar JSONPrettyMon = require('react-json-pretty/dist/1337');\nvar JSONPretty = require('react-json-pretty');\n\n\nconst useStyles = makeStyles((theme) => ({\n    // generatedCode:{\n    //     minHeight:100\n    // },\n    generatedCodeWrapper: {\n        background:\"#1e1e1e\",\n        color:\"white\"\n    }\n}));\n\nexport function GeneratedSchema(props){\n    const classes = useStyles();\n    return(\n        <div className={classes.generatedCodeWrapper}>\n            <Highlight in   nerHTML={false}>{`<title>${props.title}</title>`}</Highlight>\n            <Highlight innerHTML={false}>{`<script type=\"application/ld+json\">`}</Highlight>\n            <JSONPretty className={classes.generatedCode}  theme={JSONPrettyMon} id=\"json-pretty\" data={props.questions}></JSONPretty>\n            <Highlight innerHTML={false}>{`</script>`}</Highlight>\n        </div>\n        )\n}","import React, { useState } from 'react';\nimport { TextField, Button } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    textField:{\n        width:'100%'\n    },\n    button:{\n        marginTop:30\n    }\n}));\n\n\n\n\nexport function Html(props) {\n    const classes = useStyles();\n    const [text, setText] = useState(\"\");\n    const {questions, setQuestions, updateJsonBody} = props;\n    \n    const generateHTML = (text)=>{\n        const questionRegex = \"<h3>(.|\\n)*?<\\/h3>\";    \n        const answerRegex = \"<\\/h3>(.|\\n)*?<h3>\";\n        text = text.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n        console.log(text);\n        const questionsRes = [...text.matchAll(questionRegex)].map(el=>{return el[0].replace(/<\\/?h3>/g,'');})\n        const answersRes = [...text.matchAll(answerRegex)].map(el=>{return el[0].replace(/<\\/?h3>/g,'');})\n        let newQuestions = []\n        questionsRes.forEach((el, indx) => {\n            newQuestions.push({\n                question: el,\n                answer: answersRes[indx]\n            })\n        })\n        setQuestions(newQuestions);\n        updateJsonBody(newQuestions);\n    }\n    return (\n        <div>\n            <TextField\n                id=\"filled-multiline-static\"\n                label=\"HTML\"\n                multiline\n                rows={20}\n                value={text}\n                className={classes.textField}\n                variant=\"filled\"\n                onChange={(el)=>{setText(el.target.value)}}\n            />\n            <Button variant=\"contained\" className={classes.button} color=\"primary\" onClick={() => {generateHTML(text + \"<h3>\")}}>Generate</Button>\n\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { Typography, Paper, TextField, Box, AppBar, Tabs, Tab } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport { Questions } from \"../components/Question\"\nimport { GeneratedSchema } from '../components/GeneratedSchema';\nimport { Html } from '../components/Html';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n    },\n    input: {\n        width: \"100%\"\n    },\n    titleInput: {\n        width: \"90%\",\n        margin:'5%'\n    }\n}));\nconst jsonBodyStructure = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": []\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nexport default function Home() {\n    const [value, setValue] = useState(0);\n    const classes = useStyles();\n    const handleTitleChange = (v) => {\n        console.log(v);\n    }\n\n    const handleTabChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    const [title, setTitle] = useState(\"\");\n    const [questions, setQuestions] = useState([]);\n    const [jsonBody, setJsonBody] = useState(jsonBodyStructure)\n    const updateJsonBody = (q) => {\n        jsonBody.mainEntity = (q || questions).map(el => {\n            return {\n                \"@type\": \"Question\",\n                \"name\": el.question,\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": el.answer\n                }\n            }\n        })\n        setJsonBody(jsonBody)\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h3\" component=\"h3\">\n                FAQ Schema generator\n            </Typography>\n            <hr />\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={6}>\n                    <Paper className={classes.paper}>\n                        <AppBar position=\"static\">\n                            <Tabs value={value} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                                <Tab label=\"Builder\" {...a11yProps(0)} />\n                                <Tab label=\"HTML\" {...a11yProps(1)} />\n                            </Tabs>\n                        </AppBar>\n                        <TextField\n                                id=\"page-title\"\n                                label=\"Title\"\n                                className={classes.titleInput}\n                                value={title}\n                                onChange={(v) => { setTitle(v.target.value); console.log(v) }}\n                            />\n                        <TabPanel value={value} index={0}>\n                            <Questions questions={questions} updateJsonBody={updateJsonBody} setQuestions={setQuestions} />\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <Html questions={questions} updateJsonBody={updateJsonBody} setQuestions={setQuestions} />\n                    </TabPanel>\n                    </Paper>\n                </Grid>\n                <Grid item md={6}>\n                    <GeneratedSchema title={title + ' - Frequently Asked Questions(FAQ)'} questions={jsonBody} />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { TextField, Button } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    input : {\n        width: \"100%\",\n        marginBottom: \"10px\"\n    },\n    question:{\n        margin: \"20px 0\",\n        padding: \"10px 30px\",\n        border: \"1px solid #ccc\",\n    },\n    removeBtn:{\n        marginLeft: \"auto\",\n        display: \"block\",\n        marginTop:10,\n        border:\"none\",\n        fontWeight:\"bolder\",\n        color:\"white\",\n        fontSize:10,\n        background:\"#dc3545\"\n    },\n    button:{\n        marginTop:30\n    }\n}));\n\nconst generateKey = (pre) => {\n    return `${ pre }_${ new Date().getTime() }`;\n}\n\nexport function  Reviews(props){\n    const {reviews, setReviews} = props\n    const classes = useStyles();\n\n    \n    const addReview = () => {\n        // Reviews: Date, Author, Review Body\n        reviews.push({\n            \"@type\": \"Review\",\n\n            reviewRating: {\n                \"@type\": \"Rating\",\n                ratingValue: \"\",\n            },\n            datePublished: \"\",\n            author: {\n                \"@type\": \"Person\",\n                name: \"\"\n            },\n            reviewBody: \"\",\n        });\n        setReviews([...reviews]);\n        props.updateJsonBody([...reviews])\n      };\n    const deleteQuestion = (id) => {\n        const newQ =  reviews.filter((el, index) => {\n            return index !== id;\n        })\n        setReviews(newQ);\n        props.updateJsonBody(newQ)\n    }\n    return(\n        <div>\n            {reviews.map((el, index) => {\n                return(\n                    <div key={index} className={classes.question}>\n                        <TextField\n                        key={\"q_\" + index}\n                        id={\"q_\" + index}\n                        label=\"Rating\"\n                        value={el.reviewRating.ratingValue}\n                        className={classes.input}\n                        onChange={(e)=>{\n                            el.reviewRating.ratingValue = e.target.value\n                            setReviews([...reviews])\n                            props.updateJsonBody(reviews)\n                        }}\n                        />\n                        <TextField\n                        key={\"d_\" + index}\n                        id={\"d_\" + index}\n                        label=\"Date\"\n                        value={el.datePublished}\n                        className={classes.input}\n                        onChange={(e)=>{\n                            el.datePublished = e.target.value\n                            setReviews([...reviews])\n                            props.updateJsonBody(reviews)\n                        }}\n                        />\n                        <TextField\n                        key={\"a_\" + index}\n                        id={\"a_\" + index}\n                        label=\"Author Name\"\n                        value={el.author.name}\n                        className={classes.input}\n                        onChange={(e)=>{\n                            el.author.name = e.target.value\n                            setReviews([...reviews])\n                            props.updateJsonBody(reviews)\n                        }}\n                        />\n                        <TextField\n                        key={\"r_\" + index}\n                        id={\"r_\" + index}\n                        label=\"Review Body\"\n                        value={el.reviewBody}\n                        className={classes.input}\n                        onChange={(e)=>{\n                            el.reviewBody = e.target.value\n                            setReviews([...reviews])\n                            props.updateJsonBody(reviews)\n                        }}\n                        />\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>{deleteQuestion(index)}} className={classes.removeBtn}>Delete Review</Button>\n                    </div>\n                );\n            })}\n            <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={addReview}>Add Review</Button>\n        </div>\n    )\n}","import React, { useState } from \"react\";\nimport {\n    Typography,\n    Paper,\n    TextField,\n    Box,\n    AppBar,\n    Tabs,\n    Tab,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Reviews } from \"../components/Reviews\";\nimport { GeneratedSchema } from \"../components/GeneratedSchema\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n    },\n    input: {\n        width: \"100%\",\n    },\n    wideInput: {\n        width: \"90%\",\n        margin: \"10px 5%\",\n    },\n}));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n}\n\nconst jsonBodyStructure = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Product\",\n    name: \"\",\n    brand: \"\",\n    model: \"\",\n    description: \"\",\n    priceRange: \"\",\n    review: [],\n};\n\n\n\nexport default function ReviewSchemaGenerator() {\n    const [make, setMake] = useState(\"\");\n    const [model, setModel] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [reviews, setReviews] = useState([]);\n    const [price, setPrice] = useState([]);\n    const [value, setValue] = useState(0);\n    const classes = useStyles();\n\n    const handleTabChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    const [jsonBody, setJsonBody] = useState(jsonBodyStructure);\n\n    const updateJsonStructure = (key, val, func) => {\n        // Assign value to key  \n        jsonBody[key] = val;\n        // callback set function\n        func(val);\n    }\n\n    const updateJsonBody = (q) => {\n        jsonBody.review = (q || reviews)\n\n        // Escape from array if only one review\n        if (jsonBody.review.length === 1) {\n            jsonBody.review = jsonBody.review[0];\n        }\n        setJsonBody(jsonBody);\n    };\n\n    return (\n        <div>\n            <Typography variant=\"h3\" component=\"h3\">\n                Review Schema generator\n            </Typography>\n            <hr />\n            <Grid container spacing={3}>\n                <Grid item md={6}>\n                    <Paper className={classes.paper}>\n                        <AppBar position=\"static\">\n                            <Tabs\n                                value={value}\n                                onChange={handleTabChange}\n                                aria-label=\"simple tabs example\"\n                            >\n                                <Tab label=\"Builder\" {...a11yProps(0)} />\n                            </Tabs>\n                        </AppBar>\n\n                        <TextField\n                            id=\"page-name\"\n                            label=\"Name\"\n                            className={classes.wideInput}\n                            value={name}\n                            onChange={(v) => {\n                                updateJsonStructure(\"name\", v.target.value, setName);\n                            }}\n                        />\n\n                        <TextField\n                            id=\"page-title\"\n                            label=\"Make\"\n                            className={classes.wideInput}\n                            value={make}\n                            onChange={(v) => {\n                                updateJsonStructure(\"brand\", v.target.value, setMake);\n                            }}\n                        />\n                        <TextField\n                            id=\"page-title\"\n                            label=\"Model\"\n                            className={classes.wideInput}\n                            value={model}\n                            onChange={(v) => {\n                                updateJsonStructure(\"model\", v.target.value, setModel);\n                            }}\n                        />\n                        <TextField\n                            id=\"page-title\"\n                            label=\"Description\"\n                            className={classes.wideInput}\n                            value={description}\n                            onChange={(v) => {\n                                updateJsonStructure('description', v.target.value, setDescription);\n                            }}\n                        />\n                        <TextField\n                            id=\"page-title\"\n                            label=\"Price\"\n                            className={classes.wideInput}\n                            value={price}\n                            onChange={(v) => {\n                                updateJsonStructure('priceRange', v.target.value, setPrice);\n                            }}\n                        />\n                        <TabPanel value={value} index={0}>\n                            <Reviews\n                                reviews={reviews}\n                                updateJsonBody={updateJsonBody}\n                                setReviews={setReviews}\n                            />\n                        </TabPanel>\n                    </Paper>\n                </Grid>\n                <Grid item md={6}>\n                    <GeneratedSchema title={name} questions={jsonBody} />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { TextField, Button } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport a from \"./css/template1.css\"\nimport $ from 'jquery'\n\n// const useStyles = makeStyles((theme) => ({\n//     textField:{\n//         width:'100%'\n//     },\n//     button:{\n//         marginTop:30\n//     }\n// }));\n\n\n\n\nexport default function template(props) {\n    const { questions, settings } = props;\n    const javascript = `\n    $=jQuery\n    $(()=>{\n        $('.t1-faq-heading').click(function () {\n        $(this).parent('li').addClass('disable-temp');\n        ${settings.oneActive ? \"$('.t1-the-active:not(.disable-temp)').removeClass('t1-the-active').find('.t1-faq-text').slideToggle();\" : \"\"}\n        $(this).parent('li').toggleClass('t1-the-active').find('.t1-faq-text').slideToggle();\n        $(this).parent('li').removeClass('disable-temp');\n    });\n    })\n    `;\n        const CSS = `body {\n        margin:0;\n        padding:0;\n        font-family: 'arial', sans-serif;\n\n    }\n    .t1-faq-list {\n        list-style: none;\n        padding: 0;\n    }\n    .t1-faq-list li {\n        margin: 30px 0;\n        border: 1px solid rgb(205, 205, 205);\n        padding: 27px 30px;\n        margin: 0px auto 30px;\n        text-align: left;\n    }\n    .t1-faq-list .t1-faq-heading::before {\n        content: '+';\n        font-size: 40px;\n        display: block;\n        position: absolute;\n        right:0;\n        top: -8px;\n    }\n    .t1-faq-list .t1-the-active .t1-faq-heading::before {\n        content: '-'; \n    }\n    .t1-faq-heading {\n        position: relative;\n        cursor: pointer;\n        font-size: ${settings.qFontSize};\n        font-weight: 600;\n        margin:0;\n    }\n    .t1-faq-heading:hover {\n    }\n    .t1-faq-text {\n        display: none;\n    }\n    .t1-container {\n        width:500px;\n        max-width: 1200px;\n        margin: auto;\n    }\n    .t1-art-box svg {\n        width:100%;\n    }\n    .t1-row {\n        display:flex;\n    }\n    .t1-row .t1-col {\n        flex-basis: 50%;\n    }\n    .t1-read {\n        font-size: ${settings.aFontSize};\n        line-height: 1.5;\n        margin-top: 25px;\n    }`;\n\n    return (\n\n        <section id=\"code-wrapper\">\n            <style>\n                {CSS}\n            </style>\n            <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n            <script>\n                {javascript}\n            </script>\n            <div className=\"\" >\n\n                <ul className=\"t1-faq-list\" style={{ color: settings.textColor }}>\n                    {questions.map((el, index) => {\n                        return (\n\n                            <li key={index} style={{ borderColor: settings.borderColor, backgroundColor: settings.backgroundColor }} >\n                                <h3 onClick={(e) => {\n                                    $(e.target).parent('li').addClass('disable-temp');\n                                    if (settings.oneActive) {\n                                        $('.t1-the-active:not(.disable-temp)').removeClass('t1-the-active').find('.t1-faq-text').slideToggle();\n                                    }\n                                    $(e.target).parent('li').toggleClass('t1-the-active').find('.t1-faq-text').slideToggle();\n                                    $(e.target).parent('li').removeClass('disable-temp');\n                                }\n                                } className=\"t1-faq-heading\"> {el.question}</h3>\n                                <p className=\"t1-read t1-faq-text\">\n                                    {el.answer}\n                                </p>\n                            </li>\n                        )\n                    })}\n\n                </ul>\n            </div>\n        </section>\n    )\n}\n","const defaultSettings = {\n    oneActive: true,\n    qFontSize: '1.5rem',\n    aFontSize: '1rem',\n    textColor: \"#000000\",\n    backgroundColor: \"#ffffff\",\n    borderColor: \"#000000\",\n}\nexport default defaultSettings","import React, { useState } from 'react';\nimport { TextField, Button, FormControlLabel, FormControl, FormLabel, Switch } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ColorPicker } from 'material-ui-color';\nimport defaultSettings from \"../pages/defaultSettings\"\n\nconst useStyles = makeStyles((theme) => ({\n    fieldRow: {\n        justifyContent: 'start',\n        '& > .MuiFormControlLabel-label': {\n            width: '50%'\n        }\n    }\n}));\n\n\nexport function SettingsPannel(props) {\n    const classes = useStyles();\n    const { setSettings, settings } = props;\n    const [defaultValues, setDefaultValues] = useState({\n        ...defaultSettings, ...settings\n    });\n\n    const timeoutFunction = (func) => {\n        if (window.currentRunningFunc) {\n            clearTimeout(window.currentRunningFunc);\n        }\n        window.currentRunningFunc = setTimeout(() => {\n            func();\n            window.currentRunningFunc = false;\n        }, 100);\n\n    }\n\n\n    const handleOnChange = async (key, val) => {\n        setSettings({ ...settings, [key]: val });\n    }\n    return (\n        <FormControl>\n\n            <FormControlLabel value=\"Keep only one active\" className={classes.fieldRow} control={\n                <Switch\n                    value={settings.oneActive}\n                    defaultChecked={defaultValues.oneActive}\n                    onChange={(event) => handleOnChange('oneActive', event.target.checked)}\n                />\n            } labelPlacement='start' label=\"Keep only one active\" />\n\n            <FormControlLabel value=\"\" className={classes.fieldRow} control={\n                <TextField\n                    value={settings.qFontSize}\n                    defaultChecked={defaultValues.qFontSize}\n                    onChange={(event) => handleOnChange('qFontSize', event.target.value)}\n                />\n            } labelPlacement='start' label=\"Question Font Size\" />\n\n            <FormControlLabel value=\"\" className={classes.fieldRow} control={\n                <TextField\n                    value={settings.aFontSize}\n                    defaultChecked={defaultValues.aFontSize}\n                    onChange={(event) => handleOnChange('aFontSize', event.target.value)}\n                />\n            } labelPlacement='start' label=\"Answer Font Size\" />\n\n            <FormControlLabel value=\"Font color\" className={classes.fieldRow} control={<ColorPicker\n                name='color'\n                value={settings.textColor}\n                onChange={color => timeoutFunction(() => { handleOnChange(\"textColor\", \"#\" + color.hex) })}\n\n            />\n            } labelPlacement='start' label=\"Font color\" />\n\n            <FormControlLabel value=\"Background color\" className={classes.fieldRow} control={<ColorPicker\n                name='color'\n                value={settings.backgroundColor}\n                onChange={color => timeoutFunction(() => { handleOnChange(\"backgroundColor\", \"#\" + color.hex) })}\n\n            />\n            } labelPlacement='start' label=\"Background color\" />\n\n            <FormControlLabel value=\"Border color\" className={classes.fieldRow} control={<ColorPicker\n                name='color'\n                value={settings.borderColor}\n                onChange={color => timeoutFunction(() => { handleOnChange(\"borderColor\", \"#\" + color.hex) })}\n\n            />\n            } labelPlacement='start' label=\"Border color\" />\n\n\n\n        </FormControl>\n    );\n}","import { makeStyles } from '@material-ui/core';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\n\nconst useStyles = makeStyles((theme) => ({\n    // generatedCode:{\n    //     minHeight:100\n    // },\n    generatedCodeWrapper: {\n        background:\"#1e1e1e\",\n        color:\"white\"\n    }\n}));\n\nexport function GeneratedHTMLCode(props){\n    const classes = useStyles();\n    return(\n        <div className={classes.generatedCodeWrapper}>\n            \n            <SyntaxHighlighter language=\"html\" style={dark}>\n                {props.codeString}\n            </SyntaxHighlighter>\n\n            \n        </div>\n        )\n}","import React, { useState } from 'react';\nimport { Typography, Paper, TextField, Box, AppBar, Tabs, Tab, Button } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport Template1 from \"../htmlCompTemplate/Template1\";\nimport { Questions } from \"../components/Question\"\nimport { SettingsPannel } from \"../components/SettingsPannel\"\nimport { GeneratedHTMLCode } from \"../components/GeneratedHTMLCode\"\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport defaultSettings from './defaultSettings'\nconsole.log(defaultSettings)\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    body: {\n        background: \"red\"\n    },\n    genButton: {\n        marginTop: 30\n    }\n}));\n\nexport default function Home() {\n    const classes = useStyles();\n    const [tabValue, setTabValue] = useState(0);\n    const [settings, setSettings] = useState(defaultSettings);\n    const [HTMLCode, setHTMLCode] = useState(\"\");\n    const [questions, setQuestions] = useState([]);\n    const [htmlBody, setHtmlBody] = useState(\"\");\n    const updateHtmlBody = (q) => {\n        setHtmlBody(JSON.stringify(q));\n    }\n\n    //Htmlst [title, setTitle] = useState(\"\");\n    return (\n        <div>\n            <Typography variant=\"h3\" component=\"h3\">\n                FAQ Code generator\n            </Typography>\n            <hr />\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={6}>\n                    <Paper className={classes.paper}>\n                        <AppBar position=\"static\">\n                            <Tabs value={tabValue} onChange={(e, newValue) => setTabValue(newValue)} aria-label=\"simple tabs example\">\n                                <Tab label=\"Builder\" {...a11yProps(0)} />\n                                <Tab label=\"Settings\" {...a11yProps(1)} />\n                            </Tabs>\n                        </AppBar>\n\n                        <TabPanel value={tabValue} index={0}>\n                            <Questions questions={questions} updateJsonBody={updateHtmlBody} setQuestions={setQuestions} />\n                        </TabPanel>\n                        <TabPanel value={tabValue} index={1}>\n                            <SettingsPannel settings={settings} setSettings={setSettings} updateJsonBody={updateHtmlBody} />\n                        </TabPanel>\n                    </Paper>\n                </Grid>\n                <Grid item style={{ width: \"90%\" }} md={6}>\n                    <Template1 settings={settings} questions={questions} />\n                </Grid>\n            </Grid>\n            <Button className={classes.genButton} variant=\"contained\" color=\"secondary\" onClick={() => { setHTMLCode(document.getElementById(\"code-wrapper\").innerHTML) }} value=\"Test\"> Generate code </Button>\n            {HTMLCode ? (\n                <div>\n                    <GeneratedHTMLCode codeString={HTMLCode} />\n                    <CopyToClipboard \n                    onCopy={()=>{alert(\"Copied to clipboard\")}}\n                    text={HTMLCode}>\n                    <Button variant=\"contained\" color=\"\">Copy to clipboard</Button>\n                    </CopyToClipboard>\n                </div>\n            ) : \"\"}\n        </div>\n    )\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Link, BrowserRouter } from 'react-router-dom';\n\nconst pages = [{\n    title: 'FAQ Schema Generator',\n    link: '/',\n}, {\n    title: 'FAQ HTML Generator',\n    link: '/faq-html-generator'\n}, {\n    title: 'Review Schema Generator',\n    link: '/review-schema-generator'\n}\n];\n\nconst Nabar = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters \n        sx={{\n            justifyContent: 'space-between',\n        }}>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            style={{ marginRight: '20px', background: '#4fb4e6', padding: '0 10px', borderRadius: '5px' }}\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n          >\n            H SEO\n          </Typography>\n\n          <Box sx={{ flexGrow: 0, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem style={{width:\"100%\"}} onClick={handleCloseNavMenu} component={Link} to={page.link} key={page.title}>\n                    <Typography textAlign=\"center\">{page.title}</Typography>\n                </MenuItem>\n                    \n              ))}\n            </Menu>\n          </Box>\n          <div>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            style={{ marginRight: '20px', background: '#4fb4e6', padding: '0 10px', borderRadius: '5px' }}\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n          >\n            H SEO\n          </Typography>\n          </div>\n          \n          <Box sx={{ flexGrow: 1, justifyContent:'end', display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n            \n                <MenuItem style={{marginRight:20}} onClick={handleCloseNavMenu} component={Link} to={page.link} key={page.title} >\n                    <Typography textAlign=\"center\">{page.title}</Typography>\n                </MenuItem>\n            ))}\n          </Box>\n\n          \n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Nabar;","import logo from './logo.svg'\nimport './App.css'\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Home from \"./pages/home\";\nimport ReviewSchemaGeneratior from \"./pages/reviewSchemaGenerator\";\nimport HtmlGenerator from \"./pages/htmlGenerator\";\nimport { Provider } from 'react-redux'\nimport Navbar from \"./components/Navbar\"\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      {/* Add navigation material ui */}\n      <Router>\n      <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route\n            exact\n            path=\"/\"\n            component={Home}\n             />\n             <Route\n            exact\n            path=\"/review-schema-generator\"\n            component={ReviewSchemaGeneratior}\n             />\n             <Route\n            exact\n            path=\"/faq-html-generator\"\n            component={HtmlGenerator} \n             />\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}